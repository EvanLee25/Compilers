Terminals unused in grammar

    IF
    ELSE
    WHILE
    PRINT
    DOUBLE_EQ
    NOT_EQ
    LT_EQ
    GT_EQ
    PLUS_EQ
    MINUS_EQ
    MULTIPLY_EQ
    DIVIDE_EQ
    LT
    GT
    PLUS_OP
    MULTIPLY
    MINUS
    DIVIDE
    MODULUS
    LPAREN
    RPAREN
    LBRACE
    RBRACE
    COMMA
    STRINGLITERAL


State 11 conflicts: 3 shift/reduce
State 34 conflicts: 6 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: VarDecl
    5     | StmtList

    6 VarDecl: INT ID SEMICOLON
    7        | INT ID EQ NUMBER SEMICOLON
    8        | ID EQ NUMBER SEMICOLON
    9        | CHAR ID SEMICOLON
   10        | CHAR ID EQ CHARLITERAL SEMICOLON
   11        | ID EQ CHARLITERAL SEMICOLON

   12 StmtList: Expr
   13         | Expr StmtList

   14 Expr: SEMICOLON
   15     | ID SEMICOLON
   16     | ID EQ ID SEMICOLON
   17     | ID EQ NUMBER SEMICOLON
   18     | WRITE ID SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <string> (258) 9 10
    INT <string> (259) 6 7
    IF <string> (260)
    ELSE <string> (261)
    WHILE <string> (262)
    PRINT <string> (263)
    DOUBLE_EQ <string> (264)
    NOT_EQ <string> (265)
    LT_EQ <string> (266)
    GT_EQ <string> (267)
    PLUS_EQ <string> (268)
    MINUS_EQ <string> (269)
    MULTIPLY_EQ <string> (270)
    DIVIDE_EQ <string> (271)
    LT <character> (272)
    GT <character> (273)
    EQ <character> (274) 7 8 10 11 16 17
    PLUS_OP <character> (275)
    MULTIPLY <character> (276)
    MINUS <character> (277)
    DIVIDE <character> (278)
    MODULUS <character> (279)
    LPAREN <character> (280)
    RPAREN <character> (281)
    LBRACE <character> (282)
    RBRACE <character> (283)
    COMMA <character> (284)
    SEMICOLON <character> (285) 6 7 8 9 10 11 14 15 16 17 18
    STRINGLITERAL <string> (286)
    CHARLITERAL <character> (287) 10 11
    WRITE <string> (288) 18
    ID <string> (289) 6 7 8 9 10 11 15 16 17 18
    NUMBER <number> (290) 7 8 17


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    Program <ast> (37)
        on left: 1
        on right: 0
    DeclList <ast> (38)
        on left: 2 3
        on right: 1 2
    Decl <ast> (39)
        on left: 4 5
        on right: 2 3
    VarDecl <ast> (40)
        on left: 6 7 8 9 10 11
        on right: 4
    StmtList <ast> (41)
        on left: 12 13
        on right: 5 13
    Expr <ast> (42)
        on left: 14 15 16 17 18
        on right: 12 13


State 0

    0 $accept: . Program $end

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    WRITE      shift, and go to state 4
    ID         shift, and go to state 5

    Program   go to state 6
    DeclList  go to state 7
    Decl      go to state 8
    VarDecl   go to state 9
    StmtList  go to state 10
    Expr      go to state 11


State 1

    9 VarDecl: CHAR . ID SEMICOLON
   10        | CHAR . ID EQ CHARLITERAL SEMICOLON

    ID  shift, and go to state 12


State 2

    6 VarDecl: INT . ID SEMICOLON
    7        | INT . ID EQ NUMBER SEMICOLON

    ID  shift, and go to state 13


State 3

   14 Expr: SEMICOLON .

    $default  reduce using rule 14 (Expr)


State 4

   18 Expr: WRITE . ID SEMICOLON

    ID  shift, and go to state 14


State 5

    8 VarDecl: ID . EQ NUMBER SEMICOLON
   11        | ID . EQ CHARLITERAL SEMICOLON
   15 Expr: ID . SEMICOLON
   16     | ID . EQ ID SEMICOLON
   17     | ID . EQ NUMBER SEMICOLON

    EQ         shift, and go to state 15
    SEMICOLON  shift, and go to state 16


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 17


State 7

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 8

    2 DeclList: Decl . DeclList
    3         | Decl .

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    WRITE      shift, and go to state 4
    ID         shift, and go to state 5

    $default  reduce using rule 3 (DeclList)

    DeclList  go to state 18
    Decl      go to state 8
    VarDecl   go to state 9
    StmtList  go to state 10
    Expr      go to state 11


State 9

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


State 10

    5 Decl: StmtList .

    $default  reduce using rule 5 (Decl)


State 11

   12 StmtList: Expr .
   13         | Expr . StmtList

    SEMICOLON  shift, and go to state 3
    WRITE      shift, and go to state 4
    ID         shift, and go to state 19

    SEMICOLON  [reduce using rule 12 (StmtList)]
    WRITE      [reduce using rule 12 (StmtList)]
    ID         [reduce using rule 12 (StmtList)]
    $default   reduce using rule 12 (StmtList)

    StmtList  go to state 20
    Expr      go to state 11


State 12

    9 VarDecl: CHAR ID . SEMICOLON
   10        | CHAR ID . EQ CHARLITERAL SEMICOLON

    EQ         shift, and go to state 21
    SEMICOLON  shift, and go to state 22


State 13

    6 VarDecl: INT ID . SEMICOLON
    7        | INT ID . EQ NUMBER SEMICOLON

    EQ         shift, and go to state 23
    SEMICOLON  shift, and go to state 24


State 14

   18 Expr: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 25


State 15

    8 VarDecl: ID EQ . NUMBER SEMICOLON
   11        | ID EQ . CHARLITERAL SEMICOLON
   16 Expr: ID EQ . ID SEMICOLON
   17     | ID EQ . NUMBER SEMICOLON

    CHARLITERAL  shift, and go to state 26
    ID           shift, and go to state 27
    NUMBER       shift, and go to state 28


State 16

   15 Expr: ID SEMICOLON .

    $default  reduce using rule 15 (Expr)


State 17

    0 $accept: Program $end .

    $default  accept


State 18

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 19

   15 Expr: ID . SEMICOLON
   16     | ID . EQ ID SEMICOLON
   17     | ID . EQ NUMBER SEMICOLON

    EQ         shift, and go to state 29
    SEMICOLON  shift, and go to state 16


State 20

   13 StmtList: Expr StmtList .

    $default  reduce using rule 13 (StmtList)


State 21

   10 VarDecl: CHAR ID EQ . CHARLITERAL SEMICOLON

    CHARLITERAL  shift, and go to state 30


State 22

    9 VarDecl: CHAR ID SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 23

    7 VarDecl: INT ID EQ . NUMBER SEMICOLON

    NUMBER  shift, and go to state 31


State 24

    6 VarDecl: INT ID SEMICOLON .

    $default  reduce using rule 6 (VarDecl)


State 25

   18 Expr: WRITE ID SEMICOLON .

    $default  reduce using rule 18 (Expr)


State 26

   11 VarDecl: ID EQ CHARLITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 32


State 27

   16 Expr: ID EQ ID . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 28

    8 VarDecl: ID EQ NUMBER . SEMICOLON
   17 Expr: ID EQ NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 29

   16 Expr: ID EQ . ID SEMICOLON
   17     | ID EQ . NUMBER SEMICOLON

    ID      shift, and go to state 27
    NUMBER  shift, and go to state 35


State 30

   10 VarDecl: CHAR ID EQ CHARLITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 36


State 31

    7 VarDecl: INT ID EQ NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 37


State 32

   11 VarDecl: ID EQ CHARLITERAL SEMICOLON .

    $default  reduce using rule 11 (VarDecl)


State 33

   16 Expr: ID EQ ID SEMICOLON .

    $default  reduce using rule 16 (Expr)


State 34

    8 VarDecl: ID EQ NUMBER SEMICOLON .
   17 Expr: ID EQ NUMBER SEMICOLON .

    $end       reduce using rule 8 (VarDecl)
    $end       [reduce using rule 17 (Expr)]
    CHAR       reduce using rule 8 (VarDecl)
    CHAR       [reduce using rule 17 (Expr)]
    INT        reduce using rule 8 (VarDecl)
    INT        [reduce using rule 17 (Expr)]
    SEMICOLON  reduce using rule 8 (VarDecl)
    SEMICOLON  [reduce using rule 17 (Expr)]
    WRITE      reduce using rule 8 (VarDecl)
    WRITE      [reduce using rule 17 (Expr)]
    ID         reduce using rule 8 (VarDecl)
    ID         [reduce using rule 17 (Expr)]
    $default   reduce using rule 8 (VarDecl)


State 35

   17 Expr: ID EQ NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 36

   10 VarDecl: CHAR ID EQ CHARLITERAL SEMICOLON .

    $default  reduce using rule 10 (VarDecl)


State 37

    7 VarDecl: INT ID EQ NUMBER SEMICOLON .

    $default  reduce using rule 7 (VarDecl)


State 38

   17 Expr: ID EQ NUMBER SEMICOLON .

    $default  reduce using rule 17 (Expr)
